using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;
using DevExpress.Xpf.Core;
using DevExpress.Xpf.Ribbon;
using DevExpress.Xpf.Bars;
using DevExpress.Xpf.Layout.Core;
using DevExpress.Xpf.Docking;
using DevExpress.Xpf.Charts;
using DevExpress.Xpf.NavBar;
using DevExpress.Xpf.Grid;
using DevExpress.Xpf.Printing;
using System.ComponentModel;
using System.Collections.ObjectModel;
using System.ComponentModel.Composition;

using DevExpress.Xpf.Editors;
using XilixShell.Panels;


namespace XilixShell
{
    public partial class MainWindow : DXRibbonWindow
    {
        public static RoutedCommand CustomRoutedCommand = new RoutedCommand();
        public static RoutedCommand CreatePanelCommand = new RoutedCommand();



        public MainWindow()
        {
            InitializeComponent();
            DataContext = new DataSource();

            CommandBinding customCommandBinding = new CommandBinding(CustomRoutedCommand, ExecutedCustomCommand, CanExecuteCustomCommand);
            CommandBinding createPanelBinding = new CommandBinding(CreatePanelCommand, CreatePanelCommandExecute, CanExecuteCreatePanelCommand);

            // attach CommandBinding to root window 
            this.CommandBindings.Add(customCommandBinding);
            this.CommandBindings.Add(createPanelBinding);

            bNewTopWindow.Command = CustomRoutedCommand;

            this.Loaded += new RoutedEventHandler(MainWindow_Loaded);

            //AddLayout("Advices", "Advices");
            //AddLayout("Client", "Client");
            //AddLayout("Discretions", "Discretions");

//            dockLayoutManager.DockController.Dock(new LayoutPanel() { Caption = "Eggs" });
  //          dockLayoutManager.DockController.Dock(new LayoutPanel() { Caption = "Eggs" });
    //        dockLayoutManager.DockController.Dock(new LayoutPanel() { Caption = "Eggs" });
        }

        void MainWindow_Loaded(object sender, RoutedEventArgs e)
        {
            themeComboBox.ItemsSource = Theme.Themes;
            comboBoxEditSettings1.ItemsSource = Theme.Themes;
            //Depth depth = new Depth();
            //DepthPanel.Content = depth;
            //webBrowser1.NavigateToString("<html><body><svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"460\" height=\"235\"><defs><clipPath id=\"highcharts-1\"><rect rx=\"0\" ry=\"0\" fill=\"none\" x=\"0\" y=\"0\" width=\"410\" height=\"192\" stroke-width=\"0.000001\"></rect></clipPath></defs><rect rx=\"5\" ry=\"5\" fill=\"#FFFFFF\" x=\"0\" y=\"0\" width=\"460\" height=\"235\" stroke-width=\"0.000001\" stroke=\"#4572A7\"></rect><path d=\"M 0 62 L 410 62\" fill=\"none\" stroke=\"#666666\" stroke-width=\"2\" stroke-dasharray=\"2,2\"></path><g class=\"highcharts-grid\" zIndex=\"1\"><path d=\"M 0.5 0 L 0.5 192\" fill=\"none\" stroke=\"#ccc\" stroke-width=\"1\" stroke-dasharray=\"8,3\" zIndex=\"1\"></path><path d=\"M 33.5 0 L 33.5 192\" fill=\"none\" stroke=\"#ccc\" stroke-width=\"1\" stroke-dasharray=\"8,3\" zIndex=\"1\"></path><path d=\"M 66.5 0 L 66.5 192\" fill=\"none\" stroke=\"#ccc\" stroke-width=\"1\" stroke-dasharray=\"8,3\" zIndex=\"1\"></path><path d=\"M 98.5 0 L 98.5 192\" fill=\"none\" stroke=\"#ccc\" stroke-width=\"1\" stroke-dasharray=\"8,3\" zIndex=\"1\"></path><path d=\"M 131.5 0 L 131.5 192\" fill=\"none\" stroke=\"#ccc\" stroke-width=\"1\" stroke-dasharray=\"8,3\" zIndex=\"1\"></path><path d=\"M 164.5 0 L 164.5 192\" fill=\"none\" stroke=\"#ccc\" stroke-width=\"1\" stroke-dasharray=\"8,3\" zIndex=\"1\"></path><path d=\"M 197.5 0 L 197.5 192\" fill=\"none\" stroke=\"#ccc\" stroke-width=\"1\" stroke-dasharray=\"8,3\" zIndex=\"1\"></path><path d=\"M 230.5 0 L 230.5 192\" fill=\"none\" stroke=\"#ccc\" stroke-width=\"1\" stroke-dasharray=\"8,3\" zIndex=\"1\"></path><path d=\"M 262.5 0 L 262.5 192\" fill=\"none\" stroke=\"#ccc\" stroke-width=\"1\" stroke-dasharray=\"8,3\" zIndex=\"1\"></path><path d=\"M 295.5 0 L 295.5 192\" fill=\"none\" stroke=\"#ccc\" stroke-width=\"1\" stroke-dasharray=\"8,3\" zIndex=\"1\"></path><path d=\"M 328.5 0 L 328.5 192\" fill=\"none\" stroke=\"#ccc\" stroke-width=\"1\" stroke-dasharray=\"8,3\" zIndex=\"1\"></path><path d=\"M 361.5 0 L 361.5 192\" fill=\"none\" stroke=\"#ccc\" stroke-width=\"1\" stroke-dasharray=\"8,3\" zIndex=\"1\"></path><path d=\"M 394.5 0 L 394.5 192\" fill=\"none\" stroke=\"#ccc\" stroke-width=\"1\" stroke-dasharray=\"8,3\" zIndex=\"1\"></path></g><g class=\"highcharts-grid\" zIndex=\"1\"><path d=\"M 0 192.5 L 410 192.5\" fill=\"none\" stroke=\"#ccc\" stroke-width=\"1\" stroke-dasharray=\"8,3\" zIndex=\"1\"></path><path d=\"M 0 106.5 L 410 106.5\" fill=\"none\" stroke=\"#ccc\" stroke-width=\"1\" stroke-dasharray=\"8,3\" zIndex=\"1\"></path><path d=\"M 0 19.5 L 410 19.5\" fill=\"none\" stroke=\"#ccc\" stroke-width=\"1\" stroke-dasharray=\"8,3\" zIndex=\"1\"></path></g><path d=\"M 104.5 0 L 104.5 192\" fill=\"none\" stroke-width=\"1\" stroke=\"#666\" zIndex=\"2\" stroke-dasharray=\"1,1\" visibility=\"visible\"></path><g class=\"highcharts-series-group\" zIndex=\"3\"><g class=\"highcharts-series\" clip-path=\"url(http://www.bloomberg.com/quote/TPX:IND#highcharts-1)\" visibility=\"visible\"><path d=\"M 0 121.59913618572018 L 1.0933333333333333 113.00418410041848 L 2.1866666666666665 110.02402483466038 L 3.28 120.30341476582566 L 4.373333333333333 130.75556755297578 L 5.466666666666666 134.81549466864612 L 6.56 129.33027399109187 L 7.653333333333332 118.01430692401078 L 8.746666666666666 125.70225401538701 L 9.84 130.3668511270077 L 10.933333333333332 133.04467539478966 L 12.026666666666666 124.7520583074641 L 13.12 128.76879470913704 L 14.213333333333333 124.0610068835199 L 15.306666666666665 120.60574976380082 L 16.4 120.99446618976889 L 17.493333333333332 128.5528411391548 L 18.586666666666666 132.13767040086418 L 19.68 128.63922256714767 L 20.773333333333333 129.7621811310564 L 21.866666666666664 123.80186259954118 L 22.959999999999997 107.04386556890228 L 24.05333333333333 106.00728843298646 L 25.146666666666665 90.63139425023597 L 26.24 94.86408422189214 L 27.333333333333332 88.51504926440788 L 28.426666666666666 83.20259144283943 L 29.52 77.71737076528518 L 30.61333333333333 69.89985153192059 L 31.706666666666663 75.98974220542614 L 32.8 89.42205425833434 L 33.89333333333333 91.7543528141447 L 34.986666666666665 97.41233634768476 L 36.08 89.81077068430241 L 37.17333333333333 88.94695640437338 L 38.266666666666666 85.62127142664268 L 39.36 87.0033742745311 L 40.45333333333333 82.64111216088557 L 41.54666666666667 74.56444864354127 L 42.63999999999999 77.11270076933486 L 43.73333333333333 85.44850857065688 L 44.82666666666666 86.09636928060463 L 45.919999999999995 81.5613443109733 L 47.01333333333333 76.3784586313942 L 48.10666666666666 73.44149007963256 L 49.199999999999996 62.47104872452405 L 50.29333333333333 59.23174517478725 L 51.38666666666666 50.636793089485536 L 52.48 57.5041166149272 L 53.57333333333333 61.90956944257019 L 54.666666666666664 63.03252800647891 L 55.76 69.12241867998347 L 56.85333333333333 70.5045215278709 L 57.946666666666665 63.20529086246469 L 59.04 52.580375219327806 L 60.133333333333326 53.055473073288766 L 61.22666666666666 55.733297341071705 L 62.31999999999999 52.62356593332427 L 63.41333333333333 53.228235929274575 L 64.50666666666666 53.14185450128167 L 65.6 57.5904980429211 L 66.69333333333333 67.8698879740854 L 67.78666666666666 66.74692941017668 L 68.88 60.48427588068532 L 69.97333333333333 68.30179511404991 L 71.06666666666666 62.773383722499204 L 72.16 57.374544472937856 L 73.25333333333333 45.713051693886115 L 74.34666666666666 50.11850452152811 L 75.44 46.6200566878116 L 76.53333333333333 42.732892428128025 L 77.62666666666667 41.869078148198014 L 78.72 33.44688891888211 L 79.81333333333333 36.59981104062601 L 80.90666666666667 31.719260359023053 L 82 26.10446753947849 L 83.09333333333333 25.49979754352816 L 84.18666666666667 28.523147523282717 L 85.27999999999999 29.25738966122239 L 86.37333333333332 26.57956539344042 L 87.46666666666665 33.31731677689277 L 88.55999999999999 30.769064651100166 L 89.65333333333332 36.29747604265086 L 90.74666666666666 34.13794034282631 L 91.83999999999999 35.908759616681806 L 92.93333333333332 43.6398974220545 L 94.02666666666666 34.61303819678727 L 95.11999999999999 38.3706303144825 L 96.21333333333332 35.26089890673504 L 97.30666666666666 38.97530031043283 L 98.39999999999999 34.26751248481568 L 99.49333333333333 38.15467674450025 L 100.58666666666666 42.08503171818026 L 101.67999999999999 51.32784451342974 L 102.77333333333333 44.806046699959666 L 103.86666666666666 53.35780807126491 L 104.96 49.38426238358744 L 106.05333333333333 54.09205020920459 L 107.14666666666666 52.19165879335975 L 108.24 54.653529491159446 L 109.33333333333333 59.05898231880144 L 110.42666666666666 66.09906870022893 L 111.52 66.14225941422538 L 112.61333333333333 71.8002429477664 L 113.70666666666666 69.85666081792414 L 114.8 65.2352544202999 L 115.89333333333333 61.30489944661886 L 116.98666666666666 60.2251315967066 L 118.08 67.17883655014118 L 119.17333333333332 73.78701579160514 L 120.26666666666665 64.76015656633794 L 121.35999999999999 60.09555945471726 L 122.45333333333332 55.17181805911687 L 123.54666666666665 54.826292347145255 L 124.63999999999999 56.12201376703979 L 125.73333333333332 53.962478067215244 L 126.82666666666665 52.96909164529586 L 127.91999999999999 57.11540018895914 L 129.01333333333332 61.21851801862596 L 130.10666666666665 55.17181805911687 L 131.2 55.47415305709302 L 132.29333333333332 63.89634228640793 L 133.38666666666666 66.53097584019442 L 134.48 64.19867728438408 L 135.57333333333332 67.0924551221483 L 136.66666666666666 63.89634228640793 L 137.76 52.83951950330652 L 138.85333333333332 54.78310163314879 L 139.94666666666666 57.676879470914 L 141.04 55.12862734512041 L 142.13333333333333 53.314617357268475 L 143.22666666666666 55.90606019705751 L 144.32 54.653529491159446 L 145.41333333333333 55.69010662707527 L 146.50666666666666 59.92279659873145 L 147.6 58.281549466864334 L 148.69333333333333 56.16520448103623 L 149.78666666666666 69.46794439195607 L 150.88 70.97961938183285 L 151.97333333333333 80.39519503306812 L 153.06666666666666 77.93332433526744 L 154.16 78.88352004319036 L 155.25333333333333 80.48157646106102 L 156.34666666666666 85.31893642866753 L 157.44 82.59792144688912 L 158.53333333333333 89.33567283034144 L 159.62666666666667 93.82750708597634 L 160.72 99.52868133351284 L 161.81333333333333 97.49871777567766 L 162.90666666666667 105.6185720070184 L 164 107.69172627885004 L 229.6 102.6384127412603 L 230.69333333333333 114.34309623430946 L 231.78666666666666 125.14077473343217 L 232.88 121.55594547172373 L 233.97333333333333 119.65555405587791 L 235.06666666666666 114.42947766230236 L 236.16 92.6181670940747 L 237.25333333333333 98.79443919557316 L 238.34666666666664 94.9072749358886 L 239.43999999999997 95.81427992981506 L 240.5333333333333 93.48198137400472 L 241.62666666666664 87.82399784046466 L 242.71999999999997 95.5119449318399 L 243.8133333333333 89.59481711432015 L 244.90666666666664 90.58820353623952 L 245.99999999999997 88.64462140639723 L 247.0933333333333 91.10649210419793 L 248.18666666666664 90.11310568227856 L 249.27999999999997 93.39559994601181 L 250.3733333333333 104.92752058307418 L 251.46666666666664 107.69172627885004 L 252.55999999999997 109.03063841274101 L 253.6533333333333 109.28978269671973 L 254.74666666666664 115.98434336617659 L 255.83999999999997 115.29329194223237 L 256.93333333333334 114.12714266432721 L 258.02666666666664 118.05749763800821 L 259.12 107.13024699689518 L 260.2133333333333 100.4356863274393 L 261.3066666666667 103.63179916317966 L 262.4 103.28627345120805 L 263.49333333333334 108.5987312727765 L 264.58666666666664 106.82791199892002 L 265.68 114.51585909029527 L 266.7733333333333 108.64192198677294 L 267.8666666666667 107.00067485490582 L 268.96 109.80807126467812 L 270.05333333333334 110.2831691186391 L 271.14666666666665 115.37967337022528 L 272.23999999999995 121.33999190174148 L 273.3333333333333 125.18396544742862 L 274.4266666666666 137.36374679443875 L 275.52 135.76569037656907 L 276.6133333333333 135.37697395060098 L 277.70666666666665 135.6361182345797 L 278.79999999999995 134.03806181670905 L 279.8933333333333 139.09137535429878 L 280.9866666666666 139.26413821028456 L 282.08 141.63962748009138 L 283.1733333333333 133.0878661087861 L 284.26666666666665 129.54622756107415 L 285.35999999999996 131.36023754892707 L 286.4533333333333 135.1178296666213 L 287.5466666666666 144.1446888918885 L 288.64 147.72951815359693 L 289.7333333333333 143.71278175192302 L 290.82666666666665 140.17114320421103 L 291.91999999999996 143.9719260359027 L 293.0133333333333 143.58320960993365 L 294.1066666666666 148.85247671750565 L 295.2 152.99878526116893 L 296.2933333333333 150.40734242137887 L 297.38666666666666 144.01511674989916 L 298.47999999999996 147.08165744364916 L 299.5733333333333 150.320960993386 L 300.66666666666663 147.12484815764563 L 301.76 141.0781481981375 L 302.8533333333333 133.30381967876934 L 303.94666666666666 128.63922256714767 L 305.03999999999996 127.90498042920801 L 306.1333333333333 133.00148468079323 L 307.22666666666663 136.32716965852293 L 308.32 137.3205560804423 L 309.4133333333333 139.91199892023232 L 310.50666666666666 134.90187609663906 L 311.59999999999997 136.54312322850615 L 312.6933333333333 145.05169388581498 L 313.78666666666663 143.9719260359027 L 314.88 144.87893102982818 L 315.9733333333333 142.7625860440001 L 317.06666666666666 145.48360102577948 L 318.15999999999997 146.95208530165982 L 319.25333333333333 143.8855446079088 L 320.34666666666664 145.95869887974044 L 321.44 145.61317316776885 L 322.5333333333333 145.915508165744 L 323.62666666666667 131.87852611688447 L 324.71999999999997 126.78202186529928 L 325.81333333333333 125.52949115940022 L 326.90666666666664 126.91159400728864 L 328 119.82831691186371 L 329.0933333333333 111.53569982453716 L 330.18666666666667 99.91739775948189 L 331.28 96.63490349574863 L 332.37333333333333 109.59211769469586 L 333.46666666666664 102.33607774328513 L 334.56 91.27925496018372 L 335.6533333333333 82.38196787690588 L 336.74666666666667 84.23916857875525 L 337.84 85.36212714266398 L 338.93333333333334 92.79092995006052 L 340.02666666666664 90.45863139425016 L 341.11999999999995 72.96639222567158\" fill=\"none\" stroke=\"#0B6DFF\" stroke-width=\"1\"></path><circle cx=\"0\" cy=\"0\" r=\"4\" stroke=\"#FFFFFF\" stroke-width=\"1\" fill=\"#0B6DFF\" transform=\"translate(103.86666666666666,53.35780807126491)\" visibility=\"hidden\"></circle></g></g><g class=\"highcharts-axis\" zIndex=\"7\"><text x=\"1\" y=\"204\" style=\"font-family:Arial;font-size:10px;color:#666;line-height:14px;font-weight:normal;fill:#666;\" text-anchor=\"start\"><tspan x=\"1\">6/5</tspan></text><text x=\"33.8\" y=\"204\" style=\"font-family:Arial;font-size:10px;color:#666;line-height:14px;font-weight:normal;fill:#666;\" text-anchor=\"start\"><tspan x=\"33.8\"> </tspan></text><text x=\"66.6\" y=\"204\" style=\"font-family:Arial;font-size:10px;color:#666;line-height:14px;font-weight:normal;fill:#666;\" text-anchor=\"start\"><tspan x=\"66.6\">9pm</tspan></text><text x=\"99.39999999999999\" y=\"204\" style=\"font-family:Arial;font-size:10px;color:#666;line-height:14px;font-weight:normal;fill:#666;\" text-anchor=\"start\"><tspan x=\"99.39999999999999\"> </tspan></text><text x=\"132.2\" y=\"204\" style=\"font-family:Arial;font-size:10px;color:#666;line-height:14px;font-weight:normal;fill:#666;\" text-anchor=\"start\"><tspan x=\"132.2\">10pm</tspan></text><text x=\"165\" y=\"204\" style=\"font-family:Arial;font-size:10px;color:#666;line-height:14px;font-weight:normal;fill:#666;\" text-anchor=\"start\"><tspan x=\"165\"> </tspan></text><text x=\"197.79999999999998\" y=\"204\" style=\"font-family:Arial;font-size:10px;color:#666;line-height:14px;font-weight:normal;fill:#666;\" text-anchor=\"start\"><tspan x=\"197.79999999999998\">11pm</tspan></text><text x=\"230.6\" y=\"204\" style=\"font-family:Arial;font-size:10px;color:#666;line-height:14px;font-weight:normal;fill:#666;\" text-anchor=\"start\"><tspan x=\"230.6\"> </tspan></text><text x=\"263.4\" y=\"204\" style=\"font-family:Arial;font-size:10px;color:#666;line-height:14px;font-weight:normal;fill:#666;\" text-anchor=\"start\"><tspan x=\"263.4\">6/6</tspan></text><text x=\"296.2\" y=\"204\" style=\"font-family:Arial;font-size:10px;color:#666;line-height:14px;font-weight:normal;fill:#666;\" text-anchor=\"start\"><tspan x=\"296.2\"> </tspan></text><text x=\"329\" y=\"204\" style=\"font-family:Arial;font-size:10px;color:#666;line-height:14px;font-weight:normal;fill:#666;\" text-anchor=\"start\">1am ET</text><text x=\"361.79999999999995\" y=\"204\" style=\"font-family:Arial;font-size:10px;color:#666;line-height:14px;font-weight:normal;fill:#666;\" text-anchor=\"start\"><tspan x=\"361.79999999999995\"> </tspan></text><text x=\"394.59999999999997\" y=\"204\" style=\"font-family:Arial;font-size:10px;color:#666;line-height:14px;font-weight:normal;fill:#666;\" text-anchor=\"start\"><tspan x=\"394.59999999999997\"> </tspan></text></g><g class=\"highcharts-axis\" zIndex=\"7\"><text x=\"412\" y=\"198.1\" style=\"font-family:Arial;font-size:10px;width:185px;color:#666;line-height:14px;font-weight:normal;fill:#666;\" text-anchor=\"start\"><tspan x=\"412\">1,060.00</tspan></text><text x=\"412\" y=\"111.7185720070184\" style=\"font-family:Arial;font-size:10px;width:185px;color:#666;line-height:14px;font-weight:normal;fill:#666;\" text-anchor=\"start\"><tspan x=\"412\">1,080.00</tspan></text><text x=\"412\" y=\"25.337144014036802\" style=\"font-family:Arial;font-size:10px;width:185px;color:#666;line-height:14px;font-weight:normal;fill:#666;\" text-anchor=\"start\"><tspan x=\"412\">1,100.00</tspan></text></g><g class=\"highcharts-tooltip\" zIndex=\"8\" visibility=\"hidden\"><rect rx=\"0\" ry=\"0\" fill=\"transparent\" x=\"5\" y=\"5\" width=\"0\" height=\"0\" stroke-width=\"0.000001\"></rect><text x=\"10\" y=\"22\" style=\"font-family:&quot;Lucida Grande&quot;, &quot;Lucida Sans Unicode&quot;, Verdana, Arial, Helvetica, sans-serif;font-size:12px;color:#333333;padding:0;white-space:nowrap;fill:#333333;\" zIndex=\"1\"><tspan x=\"10\"> </tspan></text></g><g class=\"highcharts-tracker\" zIndex=\"9\"><path d=\"M -10 121.59913618572018 L 0 121.59913618572018 L 1.0933333333333333 113.00418410041848 L 2.1866666666666665 110.02402483466038 L 3.28 120.30341476582566 L 4.373333333333333 130.75556755297578 L 5.466666666666666 134.81549466864612 L 6.56 129.33027399109187 L 7.653333333333332 118.01430692401078 L 8.746666666666666 125.70225401538701 L 9.84 130.3668511270077 L 10.933333333333332 133.04467539478966 L 12.026666666666666 124.7520583074641 L 13.12 128.76879470913704 L 14.213333333333333 124.0610068835199 L 15.306666666666665 120.60574976380082 L 16.4 120.99446618976889 L 17.493333333333332 128.5528411391548 L 18.586666666666666 132.13767040086418 L 19.68 128.63922256714767 L 20.773333333333333 129.7621811310564 L 21.866666666666664 123.80186259954118 L 22.959999999999997 107.04386556890228 L 24.05333333333333 106.00728843298646 L 25.146666666666665 90.63139425023597 L 26.24 94.86408422189214 L 27.333333333333332 88.51504926440788 L 28.426666666666666 83.20259144283943 L 29.52 77.71737076528518 L 30.61333333333333 69.89985153192059 L 31.706666666666663 75.98974220542614 L 32.8 89.42205425833434 L 33.89333333333333 91.7543528141447 L 34.986666666666665 97.41233634768476 L 36.08 89.81077068430241 L 37.17333333333333 88.94695640437338 L 38.266666666666666 85.62127142664268 L 39.36 87.0033742745311 L 40.45333333333333 82.64111216088557 L 41.54666666666667 74.56444864354127 L 42.63999999999999 77.11270076933486 L 43.73333333333333 85.44850857065688 L 44.82666666666666 86.09636928060463 L 45.919999999999995 81.5613443109733 L 47.01333333333333 76.3784586313942 L 48.10666666666666 73.44149007963256 L 49.199999999999996 62.47104872452405 L 50.29333333333333 59.23174517478725 L 51.38666666666666 50.636793089485536 L 52.48 57.5041166149272 L 53.57333333333333 61.90956944257019 L 54.666666666666664 63.03252800647891 L 55.76 69.12241867998347 L 56.85333333333333 70.5045215278709 L 57.946666666666665 63.20529086246469 L 59.04 52.580375219327806 L 60.133333333333326 53.055473073288766 L 61.22666666666666 55.733297341071705 L 62.31999999999999 52.62356593332427 L 63.41333333333333 53.228235929274575 L 64.50666666666666 53.14185450128167 L 65.6 57.5904980429211 L 66.69333333333333 67.8698879740854 L 67.78666666666666 66.74692941017668 L 68.88 60.48427588068532 L 69.97333333333333 68.30179511404991 L 71.06666666666666 62.773383722499204 L 72.16 57.374544472937856 L 73.25333333333333 45.713051693886115 L 74.34666666666666 50.11850452152811 L 75.44 46.6200566878116 L 76.53333333333333 42.732892428128025 L 77.62666666666667 41.869078148198014 L 78.72 33.44688891888211 L 79.81333333333333 36.59981104062601 L 80.90666666666667 31.719260359023053 L 82 26.10446753947849 L 83.09333333333333 25.49979754352816 L 84.18666666666667 28.523147523282717 L 85.27999999999999 29.25738966122239 L 86.37333333333332 26.57956539344042 L 87.46666666666665 33.31731677689277 L 88.55999999999999 30.769064651100166 L 89.65333333333332 36.29747604265086 L 90.74666666666666 34.13794034282631 L 91.83999999999999 35.908759616681806 L 92.93333333333332 43.6398974220545 L 94.02666666666666 34.61303819678727 L 95.11999999999999 38.3706303144825 L 96.21333333333332 35.26089890673504 L 97.30666666666666 38.97530031043283 L 98.39999999999999 34.26751248481568 L 99.49333333333333 38.15467674450025 L 100.58666666666666 42.08503171818026 L 101.67999999999999 51.32784451342974 L 102.77333333333333 44.806046699959666 L 103.86666666666666 53.35780807126491 L 104.96 49.38426238358744 L 106.05333333333333 54.09205020920459 L 107.14666666666666 52.19165879335975 L 108.24 54.653529491159446 L 109.33333333333333 59.05898231880144 L 110.42666666666666 66.09906870022893 L 111.52 66.14225941422538 L 112.61333333333333 71.8002429477664 L 113.70666666666666 69.85666081792414 L 114.8 65.2352544202999 L 115.89333333333333 61.30489944661886 L 116.98666666666666 60.2251315967066 L 118.08 67.17883655014118 L 119.17333333333332 73.78701579160514 L 120.26666666666665 64.76015656633794 L 121.35999999999999 60.09555945471726 L 122.45333333333332 55.17181805911687 L 123.54666666666665 54.826292347145255 L 124.63999999999999 56.12201376703979 L 125.73333333333332 53.962478067215244 L 126.82666666666665 52.96909164529586 L 127.91999999999999 57.11540018895914 L 129.01333333333332 61.21851801862596 L 130.10666666666665 55.17181805911687 L 131.2 55.47415305709302 L 132.29333333333332 63.89634228640793 L 133.38666666666666 66.53097584019442 L 134.48 64.19867728438408 L 135.57333333333332 67.0924551221483 L 136.66666666666666 63.89634228640793 L 137.76 52.83951950330652 L 138.85333333333332 54.78310163314879 L 139.94666666666666 57.676879470914 L 141.04 55.12862734512041 L 142.13333333333333 53.314617357268475 L 143.22666666666666 55.90606019705751 L 144.32 54.653529491159446 L 145.41333333333333 55.69010662707527 L 146.50666666666666 59.92279659873145 L 147.6 58.281549466864334 L 148.69333333333333 56.16520448103623 L 149.78666666666666 69.46794439195607 L 150.88 70.97961938183285 L 151.97333333333333 80.39519503306812 L 153.06666666666666 77.93332433526744 L 154.16 78.88352004319036 L 155.25333333333333 80.48157646106102 L 156.34666666666666 85.31893642866753 L 157.44 82.59792144688912 L 158.53333333333333 89.33567283034144 L 159.62666666666667 93.82750708597634 L 160.72 99.52868133351284 L 161.81333333333333 97.49871777567766 L 162.90666666666667 105.6185720070184 L 164 107.69172627885004 L 229.6 102.6384127412603 L 230.69333333333333 114.34309623430946 L 231.78666666666666 125.14077473343217 L 232.88 121.55594547172373 L 233.97333333333333 119.65555405587791 L 235.06666666666666 114.42947766230236 L 236.16 92.6181670940747 L 237.25333333333333 98.79443919557316 L 238.34666666666664 94.9072749358886 L 239.43999999999997 95.81427992981506 L 240.5333333333333 93.48198137400472 L 241.62666666666664 87.82399784046466 L 242.71999999999997 95.5119449318399 L 243.8133333333333 89.59481711432015 L 244.90666666666664 90.58820353623952 L 245.99999999999997 88.64462140639723 L 247.0933333333333 91.10649210419793 L 248.18666666666664 90.11310568227856 L 249.27999999999997 93.39559994601181 L 250.3733333333333 104.92752058307418 L 251.46666666666664 107.69172627885004 L 252.55999999999997 109.03063841274101 L 253.6533333333333 109.28978269671973 L 254.74666666666664 115.98434336617659 L 255.83999999999997 115.29329194223237 L 256.93333333333334 114.12714266432721 L 258.02666666666664 118.05749763800821 L 259.12 107.13024699689518 L 260.2133333333333 100.4356863274393 L 261.3066666666667 103.63179916317966 L 262.4 103.28627345120805 L 263.49333333333334 108.5987312727765 L 264.58666666666664 106.82791199892002 L 265.68 114.51585909029527 L 266.7733333333333 108.64192198677294 L 267.8666666666667 107.00067485490582 L 268.96 109.80807126467812 L 270.05333333333334 110.2831691186391 L 271.14666666666665 115.37967337022528 L 272.23999999999995 121.33999190174148 L 273.3333333333333 125.18396544742862 L 274.4266666666666 137.36374679443875 L 275.52 135.76569037656907 L 276.6133333333333 135.37697395060098 L 277.70666666666665 135.6361182345797 L 278.79999999999995 134.03806181670905 L 279.8933333333333 139.09137535429878 L 280.9866666666666 139.26413821028456 L 282.08 141.63962748009138 L 283.1733333333333 133.0878661087861 L 284.26666666666665 129.54622756107415 L 285.35999999999996 131.36023754892707 L 286.4533333333333 135.1178296666213 L 287.5466666666666 144.1446888918885 L 288.64 147.72951815359693 L 289.7333333333333 143.71278175192302 L 290.82666666666665 140.17114320421103 L 291.91999999999996 143.9719260359027 L 293.0133333333333 143.58320960993365 L 294.1066666666666 148.85247671750565 L 295.2 152.99878526116893 L 296.2933333333333 150.40734242137887 L 297.38666666666666 144.01511674989916 L 298.47999999999996 147.08165744364916 L 299.5733333333333 150.320960993386 L 300.66666666666663 147.12484815764563 L 301.76 141.0781481981375 L 302.8533333333333 133.30381967876934 L 303.94666666666666 128.63922256714767 L 305.03999999999996 127.90498042920801 L 306.1333333333333 133.00148468079323 L 307.22666666666663 136.32716965852293 L 308.32 137.3205560804423 L 309.4133333333333 139.91199892023232 L 310.50666666666666 134.90187609663906 L 311.59999999999997 136.54312322850615 L 312.6933333333333 145.05169388581498 L 313.78666666666663 143.9719260359027 L 314.88 144.87893102982818 L 315.9733333333333 142.7625860440001 L 317.06666666666666 145.48360102577948 L 318.15999999999997 146.95208530165982 L 319.25333333333333 143.8855446079088 L 320.34666666666664 145.95869887974044 L 321.44 145.61317316776885 L 322.5333333333333 145.915508165744 L 323.62666666666667 131.87852611688447 L 324.71999999999997 126.78202186529928 L 325.81333333333333 125.52949115940022 L 326.90666666666664 126.91159400728864 L 328 119.82831691186371 L 329.0933333333333 111.53569982453716 L 330.18666666666667 99.91739775948189 L 331.28 96.63490349574863 L 332.37333333333333 109.59211769469586 L 333.46666666666664 102.33607774328513 L 334.56 91.27925496018372 L 335.6533333333333 82.38196787690588 L 336.74666666666667 84.23916857875525 L 337.84 85.36212714266398 L 338.93333333333334 92.79092995006052 L 340.02666666666664 90.45863139425016 L 341.11999999999995 72.96639222567158 L 351.11999999999995 72.96639222567158\" fill=\"none\" isTracker=\"true\" stroke-opacity=\"0.000001\" stroke=\"rgb(192,192,192)\" stroke-width=\"21\" visibility=\"visible\" zIndex=\"1\" style=\"\"></path></g><path d=\"M 0.5 0 L 0.5 192\" fill=\"none\" stroke=\"#666\" stroke-width=\"1\" stroke-dasharray=\"none\" zIndex=\"10\"></path><path d=\"M 410.5 0 L 410.5 192\" fill=\"none\" stroke=\"#666\" stroke-width=\"1\" stroke-dasharray=\"none\" zIndex=\"10\"></path><path d=\"M 0 192.5 L 410 192.5\" fill=\"none\" stroke=\"#666\" stroke-width=\"1\" stroke-dasharray=\"none\" zIndex=\"10\"></path></svg></body></html>");
            layoutPanel2.Visibility = System.Windows.Visibility.Collapsed;
        }

        private void CreatePanelCommandExecuteBBG(object sender, ExecutedRoutedEventArgs e)
        {
            layoutPanel2.Visibility = System.Windows.Visibility.Visible;
            bbgPanelBrowser.NavigateToString("<html><body><iframe width=\"560\" height=\"315\" src=\"http://www.youtube.com/embed/CUS0ktfCYBI?autoplay=1&loop=1\" frameborder=\"0\" allowfullscreen></iframe></body></html>");
        }

        private void CanExecuteCreatePanelCommandBBG(object sender, CanExecuteRoutedEventArgs e)
        {
            e.CanExecute = true;
        }

        private void CreatePanelCommandExecute(object sender, ExecutedRoutedEventArgs e)
        {
            //dockLayoutManager.DockController.Dock(new LayoutPanel() { Caption = "Eggs2" });
         //   LayoutPanel panel = new LayoutPanel();
           // BarButtonItemLinkControl link = (BarButtonItemLinkControl)e.OriginalSource;
            
           // panel.Caption = link.ActualContent + " " +  DateTime.Now.TimeOfDay.Seconds;
           // dockLayoutManager.LayoutRoot.Add(panel);
        }

        private void CanExecuteCreatePanelCommand(object sender, CanExecuteRoutedEventArgs e)
        {
            e.CanExecute = true;
        }

        private void ExecutedCustomCommand(object sender,    ExecutedRoutedEventArgs e)
        {
            MainWindow mw = new MainWindow();
            mw.Show();
        }



        private void CanExecuteCustomCommand(object sender, CanExecuteRoutedEventArgs e)
        {
            Control target = e.Source as Control;

            if (target != null)
            {
                e.CanExecute = true;
            }
            else
            {
                e.CanExecute = false;
            }
        }

        private void AddLayout(string layoutID, string layoutCaption)
        {
            return;
            BarButtonItem bbi = new BarButtonItem();
            bbi.Name = layoutID;
            bbi.Content = layoutCaption;
            bbi.Command = CreatePanelCommand;
            
            barManager.Items.Add(bbi);

            BarButtonItemLink link = new BarButtonItemLink();
            link.BarItemName = bbi.Name;
            link.RibbonStyle = RibbonItemStyles.SmallWithText;

            OpenViews.ItemLinks.Add(link);
        }

        //IShellServices
        public void RegisterView(string viewType, ICommand command)
        {
            BarButtonItem bbi = new BarButtonItem();
            bbi.Name = viewType;
            bbi.Content = viewType;
            bbi.Command = command;
            bbi.CommandParameter = this;

            barManager.Items.Add(bbi);

            BarButtonItemLink link = new BarButtonItemLink();
            link.BarItemName = bbi.Name;
            link.RibbonStyle = RibbonItemStyles.SmallWithText;

            OpenViews.ItemLinks.Add(link);
        }

        public void ShowView(string name, FrameworkElement element)
        {
            LayoutPanel newpanel2 = new LayoutPanel();
            newpanel2.Caption = name;
            newpanel2.Name = name;
            newpanel2.Content = element;
            dockLayoutManager.DockController.Dock(newpanel2);
        }

        private void themeComboBox_SelectedIndexChanged(object sender, RoutedEventArgs e)
        {
            ThemeManager.ApplicationThemeName = (string)((ComboBoxEdit)sender).EditValue;
        }

        private void themeCombo_EditValueChanged(object sender, RoutedEventArgs e)
        {
            
            ThemeManager.ApplicationThemeName = (string)((BarEditItem)sender).EditValue;
        }

        private void fontSize_EditValueChanged(object sender, RoutedEventArgs e)
        {
            decimal value = (decimal)((BarEditItem)sender).EditValue;
            dockLayoutManager.FontSize = (double)value;
            //Application.Current.MainWindow.FontSize = (double)value;
        }

        private void barEditItem1_EditValueChanged(object sender, RoutedEventArgs e)
        {
            dockLayoutManager.FontSize = (double)barEditItem1.EditValue;
        }

    }



    public class TestData
    {
        public string Text { get; set; }
        public int Number { get; set; }
    }

    public class TestDataViewModel : INotifyPropertyChanged
    {
        TestData data;
        public TestDataViewModel()
        {
            data = new TestData() { Text = string.Empty, Number = 0 };
        }
        public string Text
        {
            get { return Data.Text; }
            set
            {
                if (Data.Text == value)
                    return;
                Data.Text = value;
                RaisePropertyChanged("Text");
            }
        }
        public int Number
        {
            get { return Data.Number; }
            set
            {
                if (Data.Number == value)
                    return;
                Data.Number = value;
                RaisePropertyChanged("Number");
            }
        }
        protected TestData Data
        {
            get { return data; }
        }
        #region INotifyPropertyChanged
        public event PropertyChangedEventHandler PropertyChanged;
        protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
        {
            if (PropertyChanged != null)
                PropertyChanged(this, e);
        }
        protected void RaisePropertyChanged(string propertyName)
        {
            OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
        }
        #endregion
    }

    public class DataSource
    {
        ObservableCollection<TestDataViewModel> source;
        public DataSource()
        {
            source = CreateDataSource();
        }



        protected ObservableCollection<TestDataViewModel> CreateDataSource()
        {
            ObservableCollection<TestDataViewModel> res = new ObservableCollection<TestDataViewModel>();
            res.Add(new TestDataViewModel() { Text = "Row0", Number = 0 });
            res.Add(new TestDataViewModel() { Text = "Row1", Number = 1 });
            res.Add(new TestDataViewModel() { Text = "Row2", Number = 2 });
            res.Add(new TestDataViewModel() { Text = "Row3", Number = 3 });
            res.Add(new TestDataViewModel() { Text = "Row4", Number = 4 });
            res.Add(new TestDataViewModel() { Text = "Row5", Number = 5 });
            res.Add(new TestDataViewModel() { Text = "Row6", Number = 6 });
            res.Add(new TestDataViewModel() { Text = "Row7", Number = 7 });
            res.Add(new TestDataViewModel() { Text = "Row8", Number = 8 });
            res.Add(new TestDataViewModel() { Text = "Row9", Number = 9 });
            return res;
        }
        public ObservableCollection<TestDataViewModel> Data { get { return source; } }
    }

 


}

